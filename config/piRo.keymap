#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;

    //retro-tap;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <80>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <40>;
        };

        td_ctrl_esc: td_ctrl_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CTRL_ESC";
            #binding-cells = <0>;
            bindings = <&kp LCTRL>, <&kp ESCAPE>;
        };

        mm_up: mm_up {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_UP";
            bindings = <&msc SCRL_UP>, <&kp UP_ARROW>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 3 TAB             &kp Q  &kp W      &kp E         &kp R         &kp T        &kp Y      &kp U        &kp I           &kp O           &kp P          &kp LEFT_BRACKET
&td_ctrl_esc          &kp A  &kp S      &kp D         &kp F         &kp G        &kp H      &kp J        &kp K           &kp L           &kp SEMICOLON  &kp SINGLE_QUOTE
&mt LEFT_SHIFT MINUS  &kp Z  &kp X      &kp C         &kp V         &kp B        &kp N      &kp M        &kp COMMA       &kp DOT         &kp SLASH      &lt 2 INT1
                             &mkp LCLK  &kp LEFT_WIN  &kp LEFT_ALT  &kp SPACE    &mkp RCLK  &lt 2 ENTER  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW
            >;

            sensor-bindings = <&scroll_up_down>, <&scroll_up_down>;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &kp F11
                &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &kp F12
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&kp LANG_ZENKAKUHANKAKU  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)    &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)   &kp LS(NUMBER_9)  &kp MINUS     &kp EQUAL
&kp F2                   &kp F5            &kp F7            &kp F10           &kp F11           &kp F12             &kp BACKSPACE     &mkp LCLK         &kp RIGHT_BRACKET  &kp NON_US_HASH   &mkp RCLK     &kp INT3
&none                    &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4      &kp NUMBER_5        &kp NUMBER_6      &kp NUMBER_7      &kp NUMBER_8       &kp NUMBER_9      &kp NUMBER_0  &kp PRINTSCREEN
                                           &trans            &kp LANG2         &kp LANG1         &kp DELETE          &trans            &trans            &trans             &trans            &trans        &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &bootloader    &bootloader  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans         &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans         &trans       &trans        &trans        &trans        &trans        &bt BT_CLR
                &trans  &trans  &trans  &trans         &trans       &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans    &trans  &trans
                &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans    &trans  &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
